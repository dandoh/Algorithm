
public class Work {
	public static boolean[] marked;
	public static void main(String[] args) {
		SymbolDigraph sg = new SymbolDigraph(args[0], " ");
		marked = new boolean[sg.G().V()];
//		bfs(sg, 0);
		dfs(sg, 0);
	}
	
	public static void dfs(SymbolDigraph sg, int v) {
		
	}
	
	public static void bfs(SymbolDigraph sg, int v) {
		Queue<Integer> queue = new Queue<Integer>();
		marked[0] = true;
		queue.enqueue(0);
		while (!queue.isEmpty()) {
			int u = queue.dequeue();
			StdOut.print(sg.name(u) + " ");
			for (int w : sg.G().adj(u)) {
				if (!marked[w]) {
					marked[w] = true;
					queue.enqueue(w);
				}
			}
		}
	}
}
