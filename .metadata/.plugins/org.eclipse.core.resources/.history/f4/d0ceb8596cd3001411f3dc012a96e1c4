
public class KruskalMST {
	
	private Queue<Edge> mst;
	
	public KruskalMST(WeightedGraph G) {
		MinPQ<Edge> pq = new MinPQ<Edge>();
		for (Edge e : G.edges()) {
			pq.insert(e);
		}
		
		WeightedQuickUnionUF uf = new WeightedQuickUnionUF(G.V());
		mst = new Queue<Edge>();
		
		while (!pq.isEmpty() && mst.size() < G.V() - 1) {
			Edge e = pq.delMin();
			int v = e.either();
			int w = e.other(v);
			
			if (!uf.connected(v, w)) {
				uf.union(v, w);
				mst.enqueue(e);
			}
		}
	}
	
	public Iterable<Edge> mst() {
		return mst;
	}
}
