
public class EulerGraph {
	private int V;
	private Bag<EulerEdge>[] adj; 
	
	public EulerGraph(EdgeWeightedGraph G){
		this.V = G.V();
		adj = (Bag<EulerEdge>[]) new Bag[G.V()];
		for (int i = 0; i < V; i++) {
			adj[i] = new Bag<EulerEdge>();
		}
		
		for (int i = 0; i < V; i++) {
			for (Edge e : G.adj(i)) {
				
			}
		}
		
	}
	
	
	private class EulerEdge {
		private int u, v;
		private boolean deleted;
		private float weight;
		
		public EulerEdge(int u, int v, float weight) {
			this.u = u;
			this.v = v;
			this.weight = weight;
			deleted = false;
		}
		
		public int either() {
			return u;
		}
		
		public int other(int w) {
			if (w == u)
				return v;
			else 
				return u;
		}
		
		public float weight() {
			return weight;
		}
		
		public void delete() {
			deleted = true;
		}
	}
}
